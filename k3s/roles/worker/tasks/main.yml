---
- name: Get k3s installed version
  ansible.builtin.command: k3s --version
  register: k3s_version_output
  changed_when: false
  ignore_errors: true

- name: Set k3s installed version
  when: k3s_version_output.rc == 0
  ansible.builtin.set_fact:
    installed_k3s_version: "{{ k3s_version_output.stdout_lines[0].split(' ')[2] }}"

# Download and install the newer version only if needed
- name: Download artefact only if needed
  block:
    - name: Download K3s install script
      ansible.builtin.get_url:
        url: https://get.k3s.io/
        timeout: 120
        dest: /usr/local/bin/k3s-install.sh
        owner: root
        group: root
        mode: 0755

    - name: Download K3s binary
      ansible.builtin.command:
        cmd: /usr/local/bin/k3s-install.sh --flannel-backend none --disable-network-policy --disable=servicelb
      environment:
        INSTALL_K3S_SKIP_START: "true"
        INSTALL_K3S_VERSION: "{{ k3s_version }}"
        INSTALL_K3S_EXEC: "agent"
      changed_when: true

- name: Join Cluster
  block:
    - name: Ensure /tmp/k3s directory exists on worker
      file:
        path: /tmp/k3s
        state: directory
        mode: '0755'

    - name: Copy join command from localhost to worker
      copy:
        src: /tmp/k3s/join_command.sh
        dest: /tmp/k3s/join_command.sh
        mode: '0755'

    - name: Execute join command on worker
      command: /tmp/k3s/join_command.sh

    - name: Enable and check K3s service
      ansible.builtin.systemd:
        name: k3s-agent
        daemon_reload: yes
        state: started
        enabled: true
