---
# tasks file for master
- name: Initialize the Kubernetes cluster using kubeadm
  become: yes
  shell: sudo kubeadm init --apiserver-advertise-address="{{ node_ip  }}" --apiserver-cert-extra-sans="{{ node_ip  }}" --control-plane-endpoint="{{ node_ip }}" --pod-network-cidr=192.168.0.0/16
  # shell: sudo kubeadm init --apiserver-advertise-address="{{ node_ip  }}" --apiserver-cert-extra-sans="{{ node_ip  }}" --control-plane-endpoint="{{ node_ip }}" --pod-network-cidr=192.168.0.0/16 --node-name="{{ inventory_hostname }}"
  register: kubeadm_init

- name: Initialize the Kubernetes cluster using kubeadm result
  ansible.builtin.debug:
    var: kubeadm_init

- name: Create .kube directory
  file:
    path: "/home/{{ ansible_user }}/.kube"
    state: directory
    owner: "{{ ansible_user }}"
    mode: '0755'

- name: Copy admin.conf to .kube config
  command: "cp -i /etc/kubernetes/admin.conf /home/{{ ansible_user }}/.kube/config"
  become: true

- name: Set ownership for kube config
  file:
    path: "/home/{{ ansible_user }}/.kube/config"
    owner: "{{ ansible_user }}"
    group: "users"
    mode: '0644'
  become: true


- name: Get join command
  block:
    - name: Generate join command
      command: kubeadm token create --print-join-command
      register: join_command

    - name: Ensure /tmp/k8s directory exists on localhost
      delegate_to: localhost
      file:
        path: /tmp/k8s
        state: directory
        mode: '0755'

    - name: Save join command to file on localhost
      delegate_to: localhost
      copy:
        content: "{{ join_command.stdout_lines[0] }}"
        dest: /tmp/k8s/join_command.sh
        mode: '0755'
    
    - name: Debug join command
      debug:
        msg: "Join command: {{ join_command.stdout_lines[0] }}"